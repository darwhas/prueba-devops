pipeline {
    agent any
    
    stages {
        stage('Clonar Repositorio') {
            steps {
                // Clonar el repositorio de GitHub
                git branch: 'develop', url: 'https://github.com/darwhas/prueba-devops.git'
            }
        }
        
        stage('Ejecutar Pruebas Unitarias') {
            steps {
                 // Instalar las dependencias necesarias (si es necesario)
                sh 'pip install -r requirements.txt'
                
                // Ejecutar las pruebas unitarias con pytest
                sh 'pytest'
            }
            
            post {
                always {
                    // Publicar los resultados de las pruebas unitarias
                    junit 'pytest.xml'  // Archivo XML generado por pytest
                }
            }

        // }
        
        // stage('Análisis SonarQube') {
        //     steps {
        //         script {
        //             def scannerHome = tool 'SonarScanner'
        //             withSonarQubeEnv('SonarQubeServer') {
        //                 sh "${scannerHome}/bin/sonar-scanner \
        //                     -Dsonar.projectKey=prueba_devops \
        //                     -Dsonar.sources=."
        //             }
        //         }
        //     }
        // }
        
        //stage('Construir y Subir Imagen Docker') {
            //steps {
                // Construir la imagen de Docker
                // Aquí debes agregar los comandos para construir la imagen de Docker.
                
                // Subir la imagen a Docker Hub
                // Aquí debes agregar los comandos para subir la imagen a Docker Hub.
            //}
        //}
    }
}